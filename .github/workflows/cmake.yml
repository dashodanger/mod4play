name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  # The number of days to retain artifacts
  RETENTION_DAYS: 30

jobs:

  build-linux:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake ${{github.workspace}}/example -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - uses: actions/upload-artifact@v4
      with:
        name: m4player-linux
        path: |
          ${{github.workspace}}/build/m4player
        retention-days: ${{env.RETENTION_DAYS}}

  build-win64:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
      - name: Configure CMake MSVC
        run: cd example && mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      - name: Build MSVC
        run: cmake --build example/build --config ${{env.BUILD_TYPE}}
      - uses: actions/upload-artifact@v4
        with:
          name: m4player-win64
          path: |
            example/build/${{env.BUILD_TYPE}}/m4player.exe
          retention-days: ${{env.RETENTION_DAYS}}

  build-win32:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
      - name: Download w64devkit
        run: invoke-webrequest https://github.com/skeeto/w64devkit/releases/download/v2.1.0/w64devkit-x86-2.1.0.exe -outfile ${{github.workspace}}\w64devkit.exe
      - name: Extract w64devkit
        run: ${{github.workspace}}\w64devkit.exe -y
      - name: Set environment variables and build
        run: |
          $env:Path = "${{github.workspace}}\w64devkit\bin;" + $env:Path
          cmake example -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_FLAGS="-isystem ${{github.workspace}}\w64devkit\include" -G "MinGW Makefiles"
          cmake --build example/build --config ${{env.BUILD_TYPE}}
          strip example/build/m4player.exe
      - uses: actions/upload-artifact@v4
        with:
          name: m4player-win32
          path: |
            example/build/m4player.exe
          retention-days: ${{env.RETENTION_DAYS}}